/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package crud;

import Model.Directory;
import Model.User;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Zaniar
 */
public class ViewPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPanel
     */
    JPanel bottomPanel;
    Directory users;
    public ViewPanel(JPanel bottomPanel, Directory users) {
        initComponents();
        this.bottomPanel = bottomPanel;
        this.users = users;
        populateTabel();
        clean();

    }
    public boolean patternMatches(String emailAddress, String regexPattern) {
    return Pattern.compile(regexPattern)
      .matcher(emailAddress)
      .matches();
}
    public boolean testEmail(String emailAddress ) {
    emailAddress = "username@domain.com";
    String regexPattern;
    regexPattern = "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@" 
        + "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";
    return patternMatches(emailAddress, regexPattern);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        levelBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        phoneField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        genderBox = new javax.swing.JComboBox<>();
        DButton = new javax.swing.JButton();
        VButton = new javax.swing.JButton();
        UButton = new javax.swing.JButton();
        DateChooser = new com.toedter.calendar.JDateChooser();
        genderLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        photoLabel = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Users List");

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Age", "Level", "Email", "Cell Phoone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserTable.setColumnSelectionAllowed(true);
        UserTable.setShowHorizontalLines(true);
        UserTable.setShowVerticalLines(true);
        jScrollPane1.setViewportView(UserTable);
        UserTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (UserTable.getColumnModel().getColumnCount() > 0) {
            UserTable.getColumnModel().getColumn(0).setMinWidth(35);
            UserTable.getColumnModel().getColumn(0).setMaxWidth(45);
            UserTable.getColumnModel().getColumn(2).setMinWidth(55);
            UserTable.getColumnModel().getColumn(2).setMaxWidth(65);
            UserTable.getColumnModel().getColumn(3).setMinWidth(55);
            UserTable.getColumnModel().getColumn(3).setMaxWidth(65);
        }

        jLabel6.setText("Level :");

        levelBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chooser", "Level 1", "Level 2", "Level 3", "Level 4", "Level 5" }));
        levelBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Phone Number : ");

        jLabel8.setText("Email : ");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        ageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Name : ");

        jLabel3.setText("Age :");

        jLabel4.setText("Gender : ");

        jLabel5.setText("Start Date : ");

        genderBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chooser", "Male", "Female", "Other" }));
        genderBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderBoxActionPerformed(evt);
            }
        });

        DButton.setText("Delete");
        DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DButtonActionPerformed(evt);
            }
        });

        VButton.setText("View");
        VButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VButtonActionPerformed(evt);
            }
        });

        UButton.setText("Update");
        UButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UButtonActionPerformed(evt);
            }
        });

        genderLabel.setText("Gender");

        levelLabel.setText("Level");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(VButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DButton)
                .addGap(115, 115, 115))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(genderLabel)
                                .addGap(48, 48, 48)
                                .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(phoneField, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(emailField, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                .addComponent(DateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(levelLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(levelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(54, 54, 54))))
                        .addGap(96, 96, 96)
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(378, 378, 378)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(UButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DButton)
                    .addComponent(VButton))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(genderLabel)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(levelBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(levelLabel))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(phoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addComponent(UButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void ageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFieldActionPerformed

    private void genderBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderBoxActionPerformed
        // TODO add your handling code here:
        String tempgender = genderBox.getSelectedItem().toString();
        if(!"Chooser".equals(tempgender)){
        genderLabel.setText(tempgender);
    }
    }//GEN-LAST:event_genderBoxActionPerformed

    private void DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = UserTable.getSelectedRow();
        if (selectedIndex < 0){
        JOptionPane.showMessageDialog(this, "Please Select a User");
        } else {
            DefaultTableModel model =  (DefaultTableModel) UserTable.getModel();
            User selectedUser = (User) model.getValueAt(selectedIndex, WIDTH);
            users.removeUser(selectedUser);
            JOptionPane.showMessageDialog(this, "User Deleted");
            populateTabel();
        
        }
    }//GEN-LAST:event_DButtonActionPerformed

    private void VButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = UserTable.getSelectedRow();
        if (selectedIndex < 0){
        JOptionPane.showMessageDialog(this, "Please Select a User");
        } else {
            DefaultTableModel model =  (DefaultTableModel) UserTable.getModel();
            User selectedUser = (User) model.getValueAt(selectedIndex, WIDTH);
            nameField.setText(selectedUser.getName());
            ageField.setText(String.valueOf(selectedUser.getAge()));
            emailField.setText(selectedUser.getEmail());
            DateChooser.setDate(selectedUser.getStartDate());
            phoneField.setText(String.valueOf(selectedUser.getCellPhone()));
            genderLabel.setText(selectedUser.getGender());
            levelLabel.setText(selectedUser.getLevel());
            photoLabel.setIcon(selectedUser.getPhoto());
            
        
        }
        
    }//GEN-LAST:event_VButtonActionPerformed

    @SuppressWarnings("empty-statement")
    private void UButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = UserTable.getSelectedRow();
        if (selectedIndex < 0){
        JOptionPane.showMessageDialog(this, "Please Select a User");
        } else {
            DefaultTableModel model =  (DefaultTableModel) UserTable.getModel();
            User selectedUser = (User) model.getValueAt(selectedIndex, WIDTH);
        try{
            selectedUser.setName(nameField.getText());
            if(testEmail(emailField.getText())){
                selectedUser.setEmail(emailField.getText());}else{
                JOptionPane.showMessageDialog(this, "Email not valid");};
            try{
            if(Integer.parseInt(ageField.getText()) < 120 && Integer.parseInt(ageField.getText()) > 1){
                selectedUser.setAge(Integer.parseInt(ageField.getText()));} else {
                JOptionPane.showMessageDialog(this, "Age must be a number between 1 and 120");};}catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Age must be a number");
        }
            selectedUser.setCellPhone(Long.parseLong(phoneField.getText()));
            selectedUser.setGender(genderLabel.getText());
            selectedUser.setLevel(levelLabel.getText());
            selectedUser.setStartDate(DateChooser.getDate());
            
            JOptionPane.showMessageDialog(this, "Updated Successfully");
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Data entered is not valid");
        }}
        
    }//GEN-LAST:event_UButtonActionPerformed

    private void levelBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelBoxActionPerformed
        // TODO add your handling code here:
        String templevel = levelBox.getSelectedItem().toString();
        if(!"Chooser".equals(templevel)){
        levelLabel.setText(templevel);
    }//GEN-LAST:event_levelBoxActionPerformed
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DButton;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JButton UButton;
    private javax.swing.JTable UserTable;
    private javax.swing.JButton VButton;
    private javax.swing.JTextField ageField;
    private javax.swing.JTextField emailField;
    private javax.swing.JComboBox<String> genderBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> levelBox;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField phoneField;
    private javax.swing.JLabel photoLabel;
    // End of variables declaration//GEN-END:variables

    public void populateTabel() {
        DefaultTableModel model =  (DefaultTableModel) UserTable.getModel();
        model.setRowCount(0);
        for (User u: users.getAllusers()){
            Object[] row = new Object[6];
            row[0] = u.getEmployeeID();
            row[1] = u;
            row[2] = u.getAge();
            row[3] = u.getLevel();
            row[4] = u.getEmail();
            row[5] = u.getCellPhone();
            model.addRow(row);
            
        }
       }
    private void clean(){
        nameField.setText("");
        ageField.setText("");
        emailField.setText("");
        DateChooser.cleanup();
        phoneField.setText("");
        levelLabel.setText("");
        genderLabel.setText("");
        photoLabel.setText("");
        
        }
    
    

    
    }
       

